// Code generated by MockGen. DO NOT EDIT.
// Source: stateful_value_mapper_test.go

// Package cache_test is a generated GoMock package.
package cache_test

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockstatefulValueMapper is a mock of statefulValueMapper interface.
type MockstatefulValueMapper struct {
	ctrl     *gomock.Controller
	recorder *MockstatefulValueMapperMockRecorder
}

// MockstatefulValueMapperMockRecorder is the mock recorder for MockstatefulValueMapper.
type MockstatefulValueMapperMockRecorder struct {
	mock *MockstatefulValueMapper
}

// NewMockstatefulValueMapper creates a new mock instance.
func NewMockstatefulValueMapper(ctrl *gomock.Controller) *MockstatefulValueMapper {
	mock := &MockstatefulValueMapper{ctrl: ctrl}
	mock.recorder = &MockstatefulValueMapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockstatefulValueMapper) EXPECT() *MockstatefulValueMapperMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockstatefulValueMapper) Get(ctx context.Context, key string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, key)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockstatefulValueMapperMockRecorder) Get(ctx, key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockstatefulValueMapper)(nil).Get), ctx, key)
}
