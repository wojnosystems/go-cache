// Code generated by MockGen. DO NOT EDIT.
// Source: stateful_byte_mapper_test.go

// Package cache_test is a generated GoMock package.
package cache_test

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockstatefulByteMapper is a mock of statefulByteMapper interface.
type MockstatefulByteMapper struct {
	ctrl     *gomock.Controller
	recorder *MockstatefulByteMapperMockRecorder
}

// MockstatefulByteMapperMockRecorder is the mock recorder for MockstatefulByteMapper.
type MockstatefulByteMapperMockRecorder struct {
	mock *MockstatefulByteMapper
}

// NewMockstatefulByteMapper creates a new mock instance.
func NewMockstatefulByteMapper(ctrl *gomock.Controller) *MockstatefulByteMapper {
	mock := &MockstatefulByteMapper{ctrl: ctrl}
	mock.recorder = &MockstatefulByteMapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockstatefulByteMapper) EXPECT() *MockstatefulByteMapperMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockstatefulByteMapper) Get(ctx context.Context, key string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, key)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockstatefulByteMapperMockRecorder) Get(ctx, key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockstatefulByteMapper)(nil).Get), ctx, key)
}
